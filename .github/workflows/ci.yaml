name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  ci:
    if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Verify dependencies
        run: |
          go mod verify
          go mod tidy
          git diff --exit-code -- go.mod go.sum
      - name: Go fmt
        run: gofmt -l .
      - name: Build
        run: go build -v ./...
      - name: Run go vet
        run: go vet ./...
      - name: Run staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...
      - name: Run golint
        run: |
          go install golang.org/x/lint/golint@latest
          golint ./...
      - name: Run tests
        run: go test -race -vet=off ./...
      - name: Build cross platform binaries
        env:
          LINUX_OS_ARCH: "linux/386 linux/amd64 linux/arm linux/arm64"
          WINDOWS_OS_ARCH: "windows/386 windows/amd64"
          DARWIN_OS_ARCH: "darwin/amd64 darwin/arm64"
        run: |
          go install github.com/mitchellh/gox@latest
          # https://github.com/mitchellh/gox/issues/146#issuecomment-702096359
          gox \
            -osarch "${LINUX_OS_ARCH} ${WINDOWS_OS_ARCH} ${DARWIN_OS_ARCH}" \
            -output "dist/{{.Dir}}_{{.OS}}_{{.Arch}}" ./...

      - name: Semantic Release
        if: |
          ( github.ref == 'refs/heads/main' && github.event_name == 'push' ) ||
          github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: semantic_release
        run: |
          npm -g i \
            semantic-release@^21 \
            @semantic-release/exec@^6 \
            @semantic-release/commit-analyzer@^11 \
            @semantic-release/release-notes-generator@^12 \
            @semantic-release/changelog@^6 \
            @semantic-release/git@^10 \
            @semantic-release/github@^9 \
            conventional-changelog-conventionalcommits@^5

          npx semantic-release

          # Created through release.config.js
          echo "next_release_version=$(cat .version)" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        if: steps.semantic_release.conclusion == 'success'
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: steps.semantic_release.conclusion == 'success'
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: steps.semantic_release.conclusion == 'success'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.semantic_release.conclusion == 'success'
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          tags: |
            ghcr.io/${{ github.repository }}:v${{ steps.semantic_release.outputs.next_release_version }}
            ghcr.io/${{ github.repository }}:latest
